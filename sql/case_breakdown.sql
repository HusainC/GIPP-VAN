USE ROLE FG_RETAILPRICING;
USE WAREHOUSE WRK_RETAILPRICING_SMALL;
USE DATABASE WRK_RETAILPRICING;
USE SCHEMA GROWTH;

create or replace transient table WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW as
        with rnl as (
        select g.rn_submission
              ,b.date_created as rn_date_created
              ,row_number() over(partition by g.rn_submission
                                order by b.date_created asc) as date_no
        from WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS g
        left join prd_raw_db.quotes_public.vw_earnix_van_req_base b
        on g.rn_submission = b.quote_reference and b.date_created >= '2021-12-01'
        ),
        nb as (
        select g.nb_submission
              ,b.date_created as nb_date_created
              ,row_number() over(partition by g.nb_submission
                                order by b.date_created asc) as date_no
        from WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS g
        left join prd_raw_db.quotes_public.vw_earnix_van_req_base b
        on g.nb_submission = b.quote_reference and b.date_created >= '2021-12-01'
        )
        select g.rn_submission
              ,g.nb_submission
              ,rnl.rn_date_created
              ,nb.nb_date_created
        from WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS g
        left join rnl on g.rn_submission = rnl.rn_submission and rnl.date_no = 1
        left join nb on g.nb_submission = nb.nb_submission and nb.date_no = 1
        ;

SET DBNAME = '"WRK_RETAILPRICING"';
SET SCHEMANAME = '"GROWTH"';
SET PRODUCT = 'CV_GW_ALL_';
SET EXTRACT_TAG = 'AUTO_TEST';

SET PLACENAME = $DBNAME||'.'||$SCHEMANAME||'."'||$PRODUCT||$EXTRACT_TAG;

SET SCHF = $PLACENAME||'_SCHEME_FLATTENED"';
SET DRVF = $PLACENAME||'_DRIVER_FLATTENED"';
SET CLMF = $PLACENAME||'_CLAIM_FLATTENED"';
SET CNVF = $PLACENAME||'_CONVICTIONS_FLATTENED"';
SET CRDF = $PLACENAME||'_CREDITSCORE_FLATTENED"';

SET POL = $PLACENAME||'_Policy"';
SET SCH = $PLACENAME||'_Scheme"';
SET ADDON = $PLACENAME||'_AddOn"';
SET VEHCOV = $PLACENAME||'_VehicleCover"';
SET DRIVE = $PLACENAME||'_Driver"';
SET CLAIM = $PLACENAME||'_Claim"';
SET CNV = $PLACENAME||'_Conviction"';
SET DE = $PLACENAME||'_DataEnrichment"';


SET BASE = $PLACENAME||'_BASE"';

DROP TABLE IF EXISTS IDENTIFIER($BASE);
CREATE TRANSIENT TABLE IDENTIFIER($BASE) AS
WITH NB AS(
SELECT V.NB_SUBMISSION AS SUBMISSIONNUMBER
      ,V.NB_DATE_CREATED AS DATE_CREATED
      ,B.nk_agg_id_quote_ref
      ,MIN(B.AGGHUB_ID) AS AGGHUB_ID_REQ_E
      ,MIN(P.AGGHUB_ID) AS AGGHUB_ID_REQ_P
      ,MIN(R.AGGHUB_ID) AS AGGHUB_ID_RES_R
FROM WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW V
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_BASE" B
ON  B.QUOTE_REFERENCE=V.NB_SUBMISSION
AND B.DATE_CREATED=V.NB_DATE_CREATED
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_POLARIS_VEH_REQ" P
ON  B.date_created<=P.date_created
AND B.date_created>=DATEADD('day',-1,P.date_created)
AND B.quote_reference =P.quote_reference
AND B.nk_agg_id_quote_ref=P.nk_agg_id_quote_ref
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_RES_POLICY" R
ON  B.date_created<=DATEADD('day',+1,R.date_created)
AND B.date_created>=R.date_created
AND B.quote_reference =R.quote_reference
AND B.nk_agg_id_quote_ref=R.nk_agg_id_quote_ref
GROUP BY NB_SUBMISSION
        ,NB_DATE_CREATED
        ,B.nk_agg_id_quote_ref
),RN AS(
SELECT V.RN_SUBMISSION AS SUBMISSIONNUMBER
      ,V.RN_DATE_CREATED AS DATE_CREATED
      ,B.nk_agg_id_quote_ref
      ,MIN(B.AGGHUB_ID) AS AGGHUB_ID_REQ_E
      ,MIN(P.AGGHUB_ID) AS AGGHUB_ID_REQ_P
      ,MIN(R.AGGHUB_ID) AS AGGHUB_ID_RES_R
FROM WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW V
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_BASE" B
ON  B.QUOTE_REFERENCE=V.RN_SUBMISSION
AND B.DATE_CREATED=V.RN_DATE_CREATED
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_POLARIS_VEH_REQ" P
ON  B.date_created<=P.date_created
AND B.date_created>=DATEADD('day',-1,P.date_created)
AND B.quote_reference =P.quote_reference
AND B.nk_agg_id_quote_ref   =P.nk_agg_id_quote_ref
LEFT JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_RES_POLICY" R
ON  B.date_created<=DATEADD('day',+1,R.date_created)
AND B.date_created>=R.date_created
AND B.quote_reference =R.quote_reference
AND B.nk_agg_id_quote_ref=R.nk_agg_id_quote_ref
GROUP BY RN_SUBMISSION
        ,RN_DATE_CREATED
        ,B.nk_agg_id_quote_ref
)SELECT * FROM NB
UNION ALL
SELECT * FROM RN;

SET POL = $PLACENAME||'_Policy"';

DROP TABLE IF EXISTS IDENTIFIER($POL);
CREATE OR REPLACE TRANSIENT TABLE IDENTIFIER($POL) AS
SELECT DISTINCT
       P.LOAD_ID
      ,P.AGGHUB_ID
      ,P.NK_AGG_ID_QUOTE_REF
      ,P.AGGREGATOR_ID
      ,P.QUOTE_REFERENCE
      ,P.PRODUCT_CODE
      ,P.PAYLOAD_SOURCE
      ,P.INSERTTIMESTAMP
      ,P.SUBMISSIONNUMBER
      ,P.ACCOUNTNUMBER
      ,P.POLICYNUMBER
      ,P.ACCOUNTTYPE
      ,P.TRANSACTIONTYPE
      ,P.TRANSACTIONREASON
      ,P.ORIGINALCHANNELTYPE
      ,P.ORIGINALCHANNELCODE
      ,P.CAMPAIGNCODE
      ,CAST(P.CURRENTDATE AS DATE) AS CURRENTDATE
      ,CAST(P.INCEPTIONDATE AS DATE) AS INCEPTIONDATE
      ,CAST(P.EFFECTIVEDATE AS DATE) AS EFFECTIVEDATE
      ,CAST(P.ENDDATE AS DATE) AS ENDDATE
      ,CAST(P.FIRSTSEENDATE AS DATE) AS FIRSTSEENDATE
      ,P.DAYSTOINCEPTION
      ,P.SEENTOINCEPTION
      ,DATE(D.DRIVER_DATEOFBIRTH,'DD/MM/YYYY') AS DateOfBirth
      ,P.PRICINGRANDOMID
      ,P.EMAILDOMAIN
      ,P.INSURANCEPAYMENTTYPE
      ,P.HOMEOWNERIND
      ,P.TIMEATADDRESS
      ,P.NOOFCHILDREN
      ,P.NOOFDRIVERSINFAMILY
      ,P.NOOFVEHICLESAVAILABLETOFAMILY
      ,P.BROKERTENURE
      ,P.INSURERTENURE
      ,P.APR
      ,P.INSTALMENTS
      ,P.DEPOSIT
      ,P.EXISTINGCUSTOMER
      ,P.USERROLE
      ,P.MTACOUNT
      ,P.LASTMTADATE
      ,P.AGGHUB_QUOTE_VERSION
      ,P.HIVE_INSERT_TIMESTAMP
      ,P.DATE_CREATED
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_POLICY" P
ON  B.SUBMISSIONNUMBER=P.SUBMISSIONNUMBER
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_POLARIS_VEH_REQ_DRIVER" D
ON  B.SUBMISSIONNUMBER=D.QUOTE_REFERENCE
AND B.DATE_CREATED=D.DATE_CREATED
AND B.AGGHUB_ID_REQ_P=D.AGGHUB_ID
AND nvl(D.DRIVER_PRN,1)=1
;

SET SCH = $PLACENAME||'_Scheme"';

DROP TABLE IF EXISTS IDENTIFIER($SCH);
CREATE TRANSIENT TABLE IDENTIFIER($SCH) AS
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.*
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_SCHEME" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
;

SET VEHCOV = $PLACENAME||'_VehicleCover"';

DROP TABLE IF EXISTS IDENTIFIER($VEHCOV);
CREATE TRANSIENT TABLE IDENTIFIER($VEHCOV) AS
SELECT DISTINCT
         B.SUBMISSIONNUMBER
        ,P.LOAD_ID
        ,P.AGGHUB_ID
        ,P.NK_AGG_ID_QUOTE_REF
        ,P.AGGREGATOR_ID
        ,P.QUOTE_REFERENCE
        ,P.PRODUCT_CODE
        ,P.PAYLOAD_SOURCE
        ,P.INSERTTIMESTAMP
        ,P.NEWDETAILS
        ,P.ALARMIMMOBILISER
        ,P.ANNUALMILEAGE
        ,P.BODYTYPE
        ,P.CLAIMEDENTITLEMENTREASON
        ,P.CLAIMEDPROTECTIONREQDIND
        ,P.CLAIMEDYEARS
        ,P.CLAIMEDYEARSEARNED
        ,P.CLASSOFUSE
        ,P.COVERCODE
        ,P.COVERPERIOD
        ,P.CUBICCAPACITY
        ,P.DRIVERSALLOWED
        ,P.FIRSTREGDYEAR
        ,P.FUELTYPE
        ,P.KEEPER
        ,P.RIGHTHANDDRIVE
        ,P.LOCATIONKEPTOVERNIGHT
        ,P.MANUFACTURER
        ,P.MODEL
        ,P.MODIFIEDIND
        ,P.NOOFSEATS
        ,P.OWNEDMONTHS
        ,P.OWNEDYEARS
        ,P.OWNERSHIP
        ,P.PERSONALIMPORTIND
		,D.VEHICLE_POSTCODEFULL AS POSTCODEFULL
        ,P.PURCHASEDATE
        ,P.TRACKERDEVICEFITTEDIND
        ,P.TRANSMISSIONTYPE
        ,P.VALUE
        ,P.VEHICLEAGE
        ,P.VOLXSAMT
        ,P.CARRYHAZARDOUSGOODS
        ,P.INTERNALRACKINGSHELVING
        ,P.SIGNWRITTEN
        ,P.REFRIGERATED
        ,P.GROSSWEIGHT
        ,P.TOWTRAILER
        ,P.AGGHUB_QUOTE_VERSION
        ,P.HIVE_INSERT_TIMESTAMP
        ,P.DATE_CREATED
        ,P.NONSTANDARDVAN
        ,P.MOTORTRADE
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_VEHICLECOVER" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_POLARIS_VEH_REQ_VEHICLE" D
ON  B.SUBMISSIONNUMBER=D.QUOTE_REFERENCE
AND B.DATE_CREATED=D.DATE_CREATED
AND B.AGGHUB_ID_REQ_P=D.AGGHUB_ID
;


SET DRIVE = $PLACENAME||'_Driver"';

DROP TABLE IF EXISTS IDENTIFIER($DRIVE);
CREATE TRANSIENT TABLE IDENTIFIER($DRIVE) AS
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.LOAD_ID
      ,P.XMLSHREDDINGPATH
      ,P.AGGHUB_ID
      ,P.NK_AGG_ID_QUOTE_REF
      ,P.AGGREGATOR_ID
      ,P.QUOTE_REFERENCE
      ,P.PRODUCT_CODE
      ,P.PAYLOAD_SOURCE
      ,P.INSERTTIMESTAMP
      ,P.NEWDETAILS
      ,P.DRIVERPRN
      ,P.RELATIONSHIPTOPROPOSER
      ,DATE(D.DRIVER_DATEOFBIRTH,'dd/MM/yyyy') AS DATEOFBIRTH
      ,CAST(P.UKRESIDENCYDATE AS DATE) AS UKRESIDENCYDATE
      ,P.ACCESSOTHERVEHICLES
      ,P.LICENCETYPE
      ,P.PASSPLUSIND
      ,P.LICENCEYEARS
      ,P.LICENCEMONTHS
	  ,D.DRIVER_MARITALSTATUS AS MARITALSTATUS
	  ,D.DRIVER_MEDICALCONDITIONIND AS MEDICALCONDITION
      ,P.MYLICENCEIND
      ,P.MYLICENCERESULT
      ,D.DRIVER_NONMOTORINGCONVICTIONIND AS NONMOTORCONVICTIONS
      ,P.INSURANCEREFUSED
      ,P.ANYDRIVERPOLICY
      ,P.PUBLICLIABILITY
      ,P.MEMBERTRADEORGANISATION
      ,P.PRIMARYEMPLOYMENTTYPE
      ,P.PRIMARYEMPLOYERSBUSINESS
      ,P.PRIMARYOCCUPATIONCODE
      ,P.COMPANYESTABLISHED
      ,P.OTHEREMPLOYMENTTYPE
      ,P.OTHEREMPLOYERSBUSINESS
      ,P.OTHEROCCUPATIONCODE
      ,P.AGGHUB_QUOTE_VERSION
      ,P.HIVE_INSERT_TIMESTAMP
      ,P.DATE_CREATED
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_DRIVER" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_POLARIS_VEH_REQ_DRIVER" D
ON  B.SUBMISSIONNUMBER=D.QUOTE_REFERENCE
AND B.DATE_CREATED=D.DATE_CREATED
AND B.AGGHUB_ID_REQ_P=D.AGGHUB_ID
;


SET CLAIM = $PLACENAME||'_Claim"';

DROP TABLE IF EXISTS IDENTIFIER($CLAIM);
CREATE TRANSIENT TABLE IDENTIFIER($CLAIM) AS
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.LOAD_ID
      ,P.XMLSHREDDINGPATH
      ,P.AGGHUB_ID
      ,P.NK_AGG_ID_QUOTE_REF
      ,P.AGGREGATOR_ID
      ,P.QUOTE_REFERENCE
      ,P.PRODUCT_CODE
      ,P.PAYLOAD_SOURCE
      ,P.INSERTTIMESTAMP
      ,P.NEWDETAILS
      ,P.DRIVERPRN
      ,CAST(P.CLAIMDATE AS DATE) AS CLAIMDATE
      ,P.CLAIMTYPE
      ,P.CLAIMCOST
      ,P.CLAIMSETTLED
      ,P.DRIVERATFAULT
      ,P.NCDAFFECTED
      ,P.AGGHUB_QUOTE_VERSION
      ,P.HIVE_INSERT_TIMESTAMP
      ,P.DATE_CREATED
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_CLAIM" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
;


SET CNV = $PLACENAME||'_Conviction"';

DROP TABLE IF EXISTS IDENTIFIER($CNV);
CREATE TRANSIENT TABLE IDENTIFIER($CNV) AS
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.LOAD_ID
      ,P.XMLSHREDDINGPATH
      ,P.AGGHUB_ID
      ,P.NK_AGG_ID_QUOTE_REF
      ,P.AGGREGATOR_ID
      ,P.QUOTE_REFERENCE
      ,P.PRODUCT_CODE
      ,P.PAYLOAD_SOURCE
      ,P.INSERTTIMESTAMP
      ,P.MYLICENCERESULT
      ,P.DRIVER_DRIVERPRN
      ,P.NEWDETAILS
      ,P.DRIVERPRN
      ,CAST(P.CONVICTIONDATE AS DATE) AS CONVICTIONDATE
      ,P.CONVICTIONCODE
      ,P.AGGHUB_QUOTE_VERSION
      ,P.HIVE_INSERT_TIMESTAMP
      ,P.DATE_CREATED
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_CONVICTION" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
;

SET DE = $PLACENAME||'_DataEnrichment"';

DROP TABLE IF EXISTS IDENTIFIER($DE);
CREATE TRANSIENT TABLE IDENTIFIER($DE) AS
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.*
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_REQ_DATAENRICHMENT" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_REQ_E=P.AGGHUB_ID
;



SET SCHF = $PLACENAME||'_SCHEME_FLATTENED"';

DROP TABLE IF EXISTS IDENTIFIER($SCHF);
CREATE TRANSIENT TABLE IDENTIFIER($SCHF) AS
SELECT DISTINCT
         b.*
        ,ANN.Referral           AS Last_Annualised_Refer
        ,ANN.Brand   	        AS Last_Annualised_Brand
        ,ANN.Scheme             AS Last_Annualised_Scheme
        ,ANN.NetPremium         AS Last_Annualised_Net
        ,ANN.NetPremiumPNCD     AS Last_Annualised_Net_PNCD
        ,ANN.COMMISSION         AS Last_Annualised_Commission
        ,PRV.Referral           AS Previous_Year_Refer
        ,PRV.Brand              AS Previous_Year_Brand
        ,PRV.Scheme             AS Previous_Year_Scheme
        ,PRV.NetPremium         AS Previous_Year_Net
        ,PRV.NetPremiumPNCD     AS Previous_Year_Net_PNCD
        ,PRV.COMMISSION         AS Previous_Year_Commission
        ,INC.Referral           AS Incumbent_Refer
        ,INC.Brand              AS Incumbent_Brand
        ,INC.Scheme             AS Incumbent_Scheme
        ,INC.NetPremium         AS Incumbent_Net
        ,INC.NetPremiumPNCD     AS Incumbent_Net_PNCD
        ,AD1.Referral 			AS AD_HD_Refer
		,AD1.NetPremium 		AS AD_HD_Net
        ,AD1.NetPremiumPNCD		AS AD_HD_Net_PNCD
		,AD1."VARIANT" 			AS AD_HD_Variant
		,AD1.volexcessgranted 	AS AD_HD_Volexcessgranted
		,AD1.NCDGRANTED 		AS AD_HD_Ncdgranted
		,AD1.RATEDAREA 			AS AD_HD_Ratedarea
		,AD1.RATEDTERMS 		AS AD_HD_Ratedterms
		,AD1.RATEDCATEGORY 		AS AD_HD_Ratedcategory
		,AD2.Referral 			AS AD_HP_Refer
		,AD2.NetPremium 		AS AD_HP_Net
        ,AD2.NetPremiumPNCD		AS AD_HP_Net_PNCD
		,AD2."VARIANT"  		AS AD_HP_Variant
		,AD2.volexcessgranted 	AS AD_HP_Volexcessgranted
		,AD2.NCDGRANTED 		AS AD_HP_Ncdgranted
		,AD2.RATEDAREA 			AS AD_HP_Ratedarea
		,AD2.RATEDTERMS 		AS AD_HP_Ratedterms
		,AD2.RATEDCATEGORY 		AS AD_HP_Ratedcategory
		,AX1.Referral 			AS AX_HD_Refer
		,AX1.NetPremium 		AS AX_HD_Net
        ,AX1.NetPremiumPNCD		AS AX_HD_Net_PNCD
		,AX1."VARIANT"  		AS AX_HD_Variant
		,AX1.volexcessgranted 	AS AX_HD_Volexcessgranted
		,AX1.NCDGRANTED 		AS AX_HD_Ncdgranted
		,AX1.RATEDAREA 			AS AX_HD_Ratedarea
		,AX1.RATEDTERMS 		AS AX_HD_Ratedterms
		,AX1.RATEDCATEGORY 		AS AX_HD_Ratedcategory
		,AX2.Referral 			AS AX_HP_Refer
		,AX2.NetPremium 		AS AX_HP_Net
        ,AX2.NetPremiumPNCD		AS AX_HP_Net_PNCD
		,AX2."VARIANT"  		AS AX_HP_Variant
		,AX2.volexcessgranted 	AS AX_HP_Volexcessgranted
		,AX2.NCDGRANTED 		AS AX_HP_Ncdgranted
		,AX2.RATEDAREA 			AS AX_HP_Ratedarea
		,AX2.RATEDTERMS 		AS AX_HP_Ratedterms
		,AX2.RATEDCATEGORY 		AS AX_HP_Ratedcategory
		,CO1.Referral 			AS CO_HD_Refer
		,CO1.NetPremium 		AS CO_HD_Net
        ,CO1.NetPremiumPNCD		AS CO_HD_Net_PNCD
		,CO1."VARIANT"  		AS CO_HD_Variant
		,CO1.volexcessgranted 	AS CO_HD_Volexcessgranted
		,CO1.NCDGRANTED 		AS CO_HD_Ncdgranted
		,CO1.RATEDAREA 			AS CO_HD_Ratedarea
		,CO1.RATEDTERMS 		AS CO_HD_Ratedterms
		,CO1.RATEDCATEGORY 		AS CO_HD_Ratedcategory
		,CO2.Referral 			AS CO_HP_Refer
		,CO2.NetPremium 		AS CO_HP_Net
        ,CO2.NetPremiumPNCD 	AS CO_HP_Net_PNCD
		,CO2."VARIANT"  		AS CO_HP_Variant
		,CO2.volexcessgranted 	AS CO_HP_Volexcessgranted
		,CO2.NCDGRANTED 		AS CO_HP_Ncdgranted
		,CO2.RATEDAREA 			AS CO_HP_Ratedarea
		,CO2.RATEDTERMS 		AS CO_HP_Ratedterms
		,CO2.RATEDCATEGORY 		AS CO_HP_Ratedcategory
FROM IDENTIFIER($POL) b
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE nvl(NEWDETAILS,'X')='L') ANN ON b.date_created=ANN.date_created and b.nk_agg_id_quote_ref=ANN.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE nvl(NEWDETAILS,'X')='P') PRV ON b.date_created=PRV.date_created and b.nk_agg_id_quote_ref=PRV.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE nvl(NEWDETAILS,'X')='Y' AND ISINCUMBENT='Y') INC ON b.date_created=INC.date_created and b.nk_agg_id_quote_ref=INC.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='ADCV1' AND ISINCUMBENT='N') AD1 ON b.date_created=AD1.date_created and b.nk_agg_id_quote_ref=AD1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='ADCV2' AND ISINCUMBENT='N') AD2 ON b.date_created=AD2.date_created and b.nk_agg_id_quote_ref=AD2.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='AXCV1' AND ISINCUMBENT='N') AX1 ON b.date_created=AX1.date_created and b.nk_agg_id_quote_ref=AX1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='AXCV2' AND ISINCUMBENT='N') AX2 ON b.date_created=AX2.date_created and b.nk_agg_id_quote_ref=AX2.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='COCV1' AND ISINCUMBENT='N') CO1 ON b.date_created=CO1.date_created and b.nk_agg_id_quote_ref=CO1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM IDENTIFIER($SCH) WHERE scheme='COCV2' AND ISINCUMBENT='N') CO2 ON b.date_created=CO2.date_created and b.nk_agg_id_quote_ref=CO2.nk_agg_id_quote_ref
ORDER BY b.date_created
        ,b.nk_agg_id_quote_ref
;


SET DRVF = $PLACENAME||'_DRIVER_FLATTENED"';

DROP TABLE IF EXISTS IDENTIFIER($DRVF);
CREATE TRANSIENT TABLE IDENTIFIER($DRVF) AS
WITH X AS(
SELECT DISTINCT
	 pol.Submissionnumber
	,pol.NK_AGG_ID_QUOTE_REF
	,pol.date_created
	,DriverPRN
	,CASE WHEN LicenceMonths > 240 THEN 240 ELSE LicenceMonths END AS LicenceMonths
	,CASE WHEN LicenceYears > 20 THEN 20 ELSE LicenceYears END AS LicenceYears
	,YEAR(pol.EFFECTIVEDATE) - YEAR(drv.dateofbirth) +
	  	 	CASE WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.dateofbirth) > 0 THEN 0
	  		 	 WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.dateofbirth) < 0 THEN -1
	  		 	 WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.dateofbirth) = 0
	  		 	 AND DAYOFMONTH(pol.EFFECTIVEDATE) - DAYOFMONTH(drv.dateofbirth) < 0 THEN -1
	  	 ELSE 0 END AS age
	,YEAR(pol.EFFECTIVEDATE) - YEAR(drv.UKRESIDENCYDATE) +
	  	 	CASE WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.UKRESIDENCYDATE) > 0 THEN 0
	  		 	 WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.UKRESIDENCYDATE) < 0 THEN -1
	  		 	 WHEN MONTH(pol.EFFECTIVEDATE) - MONTH(drv.UKRESIDENCYDATE) = 0
	  		 	 AND DAYOFMONTH(pol.EFFECTIVEDATE) - DAYOFMONTH(drv.UKRESIDENCYDATE) < 0 THEN -1
	  	 ELSE 0 END AS UKResidentYears
	 ,RELATIONSHIPTOPROPOSER
	 ,ACCESSOTHERVEHICLES
	 ,MARITALSTATUS
	 ,MEDICALCONDITION
	 ,NONMOTORCONVICTIONS
	 ,INSURANCEREFUSED
	 ,MYLICENCEIND
	 ,MYLICENCERESULT
	 ,ANYDRIVERPOLICY
	 ,PUBLICLIABILITY
	 ,MEMBERTRADEORGANISATION
	 ,COMPANYESTABLISHED
	 ,PRIMARYEMPLOYMENTTYPE
	 ,PRIMARYEMPLOYERSBUSINESS
	 ,PRIMARYOCCUPATIONCODE
	 ,OTHEREMPLOYMENTTYPE
	 ,OTHEREMPLOYERSBUSINESS
	 ,OTHEROCCUPATIONCODE
	 ,LICENCETYPE
     ,PASSPLUSIND
FROM IDENTIFIER($POL) pol
INNER JOIN IDENTIFIER($DRIVE) drv
ON  pol.NK_AGG_ID_QUOTE_REF=drv.NK_AGG_ID_QUOTE_REF
AND pol.date_created=drv.date_created
),Y AS(
SELECT *
      ,CASE WHEN UKResidentYears>=age THEN 'Y' ELSE 'N' END AS UKResidentFromBirth
FROM X
)
SELECT Submissionnumber
	  ,NK_AGG_ID_QUOTE_REF
	  ,date_created
	  ,MIN(CASE WHEN DriverPRN='1' THEN Age ELSE NULL END) AS Age
	  ,MIN(Age) AS AgeMin
      ,AVG(Age) AS AgeMean
      ,MAX(Age) AS AgeMax
      ,MAX(CASE WHEN DriverPRN='1' AND Age > UKResidentYears THEN UKResidentYears ELSE 0 END) AS UKResidentYears
	  ,MIN(CASE WHEN Age > UKResidentYears THEN UKResidentYears ELSE NULL END) AS UKResidentYearsMin
      ,AVG(CASE WHEN Age > UKResidentYears THEN UKResidentYears ELSE NULL END) AS UKResidentYearsMean
	  ,MAX(CASE WHEN DriverPRN='1' THEN UKResidentFromBirth ELSE NULL END) AS UKResidentFromBirth
      ,MIN(UKResidentFromBirth) AS UKResidentFromBirthMin
      ,AVG(CASE WHEN UKResidentFromBirth='Y' THEN 1 ELSE 0 END) AS UKResidentFromBirthMean
	  ,MAX(CASE WHEN DriverPRN='1' THEN LicenceYears ELSE 0 END ) AS LicenceYears
      ,MIN(LicenceYears) AS LicenceYearsMin
	  ,MAX(LicenceYears) AS LicenceYearsMax
      ,AVG(CASE WHEN LicenceYears > 20 THEN 20 ELSE LicenceYears END) AS LicenceYearsMean
      ,MAX(CASE WHEN DriverPRN='1' THEN LicenceMonths ELSE 0 END ) AS LicenceMonths
      ,MIN(LicenceMonths) AS LicenceMonthsMin
      ,AVG(CASE WHEN LicenceMonths > 240 THEN 240 ELSE LicenceMonths END) AS LicenceMonthsMean
	  ,MAX(CASE WHEN DriverPRN='1' THEN LicenceType ELSE NULL END ) AS LicenceType
      ,SUM(CASE WHEN LicenceType IN('P_PU','U_PN','O_PE','0_PW','O_PW','P') THEN 1 ELSE 0 END) AS LicenceTypeProvisional
      ,SUM(CASE WHEN LicenceType IN('F_FM','F_FA','F_FI','F_FP','F') THEN 1 ELSE 0 END) AS LicenceTypeFullUK
      ,SUM(CASE WHEN LicenceType IN('E_FE','H_FN','N_FW','E') THEN 1 ELSE 0 END) AS LicenceTypeFullNonUK
	  ,MAX(CASE WHEN DriverPRN='1' THEN PassPlusInd ELSE NULL END ) AS PassPlusInd
      ,MAX(CASE WHEN DriverPRN='1' THEN AccessOtherVehicles ELSE NULL END ) AS AccessOtherVehicles
      ,SUM(CASE WHEN nvl(AccessOtherVehicles,'N') != 'N' THEN 1 ELSE 0 END) AS AccessOtherVehiclesTotal
      ,MAX(CASE WHEN DriverPRN='1' THEN MedicalCondition ELSE NULL END ) AS MedicalCondition
      ,SUM(CASE WHEN MedicalCondition NOT IN ('99_NO','N') THEN 1 ELSE 0 END) AS MedicalConditionTotal
      ,MAX(CASE WHEN DriverPRN='1' THEN NonMotorConvictions ELSE NULL END ) AS NonMotorConvictions
      ,MAX(CASE WHEN DriverPRN='1' THEN PRIMARYEMPLOYMENTTYPE ELSE NULL END ) AS EmploymentType
      ,MAX(CASE WHEN DriverPRN='1' THEN PRIMARYEMPLOYERSBUSINESS ELSE NULL END ) AS EmployersBusiness
      ,MAX(CASE WHEN DriverPRN='1' THEN PRIMARYOCCUPATIONCODE ELSE NULL END ) AS OccupationCode
      ,MAX(CASE WHEN DriverPRN='1' AND OTHEREMPLOYMENTTYPE IS NOT NULL THEN 1 ELSE 0 END ) AS EmploymentTypePartTime
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE = 'E' OR OTHEREMPLOYMENTTYPE = 'E') THEN 1 ELSE 0 END) AS EmploymentTypeTotalE
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE = 'S' OR OTHEREMPLOYMENTTYPE = 'S') THEN 1 ELSE 0 END) AS EmploymentTypeTotalS
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE = 'R' OR OTHEREMPLOYMENTTYPE = 'R') THEN 1 ELSE 0 END) AS EmploymentTypeTotalR
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE = 'H' OR OTHEREMPLOYMENTTYPE = 'H') THEN 1 ELSE 0 END) AS EmploymentTypeTotalH
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE = 'F' OR OTHEREMPLOYMENTTYPE = 'F') THEN 1 ELSE 0 END) AS EmploymentTypeTotalF
      ,SUM(CASE WHEN (PRIMARYEMPLOYMENTTYPE IN ('U','N') OR OTHEREMPLOYMENTTYPE IN ('U','N'))   THEN 1 ELSE 0 END) AS EmploymentTypeTotalU
      ,COUNT(DriverPRN) AS DriverTotal
	  ,SUM(CASE WHEN RelationshipToProposer = 'M' THEN 1 ELSE 0 END) AS DriverParents
	  ,SUM(CASE WHEN RelationshipToProposer = 'O' THEN 1 ELSE 0 END) AS DriverChildren
	  ,SUM(CASE WHEN RelationshipToProposer IN('S','A','J','W') THEN 1 ELSE 0 END) AS DriverOtherRelative
	  ,SUM(CASE WHEN RelationshipToProposer = 'U' THEN 1 ELSE 0 END) AS DriverNonRelative
  FROM Y
  GROUP BY
  	   Submissionnumber
	  ,NK_AGG_ID_QUOTE_REF
	  ,date_created
  ORDER BY
       date_created
      ,NK_AGG_ID_QUOTE_REF
;


SET CLMF = $PLACENAME||'_CLAIM_FLATTENED"';

DROP TABLE IF EXISTS IDENTIFIER($CLMF);
CREATE TRANSIENT TABLE IDENTIFIER($CLMF) AS
SELECT	 CLM.SUBMISSIONNUMBER
		,CLM.DATE_CREATED
		,CLM.NK_AGG_ID_QUOTE_REF
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '1 years' ) >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END)							 				AS ClaimMDL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END)							 				AS ClaimADL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) 																AS ClaimL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) 											AS ClaimMDL5Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) 											AS ClaimADL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) 																AS ClaimL5Y
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 				AS ClaimFaultMDL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 				AS ClaimFalutADL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 									AS ClaimFaultL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 				AS ClaimFaultMDL5Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 				AS ClaimFaultADL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 									AS ClaimFaultL5Y
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 				AS ClaimNonFaultMDL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 				AS ClaimNonFaultADL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 									AS ClaimNonFaultL1Y
		,SUM(CASE WHEN CLM.DRIVERPRN='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 				AS ClaimNonFaultMDL5Y
		,SUM(CASE WHEN CLM.DRIVERPRN!='1' AND (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 				AS ClaimNonFaultADL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.DRIVERATFAULT = 'N' THEN 1 ELSE 0 END) 									AS ClaimNonFaultL5Y
		,CEIL(SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE THEN CLM.CLAIMCOST ELSE 0 END),0) 											AS ClaimCostL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'W' THEN 1 ELSE 0 END) 										AS ClaimWindscreenL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'A' THEN 1 ELSE 0 END) 										AS ClaimAccidentL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'W' AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 			AS ClaimFaultWindscreenL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'A' AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 			AS ClaimFaultAccidentL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE NOT IN ('A','W') THEN 1 ELSE 0 END) 								AS ClaimOtherL1Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '1 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE NOT IN ('A','W') AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 	AS ClaimFaultOtherL1Y
		,CEIL(SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE THEN CLM.CLAIMCOST ELSE 0 END),0) 											AS ClaimCostL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'W' THEN 1 ELSE 0 END) 										AS ClaimWindscreenL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'A' THEN 1 ELSE 0 END) 										AS ClaimAccidentL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'W' AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 			AS ClaimFaultWindscreenL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE = 'A' AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 			AS ClaimFaultAccidentL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE NOT IN ('A','W')THEN 1 ELSE 0 END) 								AS ClaimOtherL5Y
		,SUM(CASE WHEN (CLM.CLAIMDATE + interval '5 years') >= POL.EFFECTIVEDATE AND CLM.CLAIMTYPE NOT IN ('A','W') AND CLM.DRIVERATFAULT = 'Y' THEN 1 ELSE 0 END) 	AS ClaimFaultOtherL5Y
		,MIN(FLOOR(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CLM.CLAIMDATE))) 	  																					        AS ClaimMonthsSince
		,MIN(CASE WHEN CLM.DRIVERPRN='1' THEN FLOOR(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CLM.CLAIMDATE)) ELSE 999 END) 											    AS ClaimMDMonthsSince
		,MIN(CASE WHEN CLM.DRIVERPRN!='1' THEN FLOOR(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CLM.CLAIMDATE)) ELSE 999 END) 											    AS ClaimADMonthsSince
  FROM IDENTIFIER($CLAIM) CLM
  INNER JOIN IDENTIFIER($POL) POL
  ON POL.SUBMISSIONNUMBER = CLM.SUBMISSIONNUMBER
  AND POL.DATE_CREATED = CLM.DATE_CREATED
  AND POL.NK_AGG_ID_QUOTE_REF = CLM.NK_AGG_ID_QUOTE_REF
  GROUP BY CLM.SUBMISSIONNUMBER
  ,CLM.NK_AGG_ID_QUOTE_REF,CLM.DATE_CREATED
  ORDER BY CLM.DATE_CREATED, CLM.NK_AGG_ID_QUOTE_REF
;


SET CNVF = $PLACENAME||'_CONVICTIONS_FLATTENED"';

DROP TABLE IF EXISTS IDENTIFIER($CNVF);
CREATE TRANSIENT TABLE IDENTIFIER($CNVF) AS
SELECT CNV.Submissionnumber
      ,CNV.NK_AGG_ID_QUOTE_REF
      ,CNV.date_created
	  ,SUM(CASE WHEN CNV.DriverPRN='1'  AND (CNV.ConvictionDate + interval '1 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionMDL1Y
	  ,SUM(CASE WHEN CNV.DriverPRN!='1' AND (CNV.ConvictionDate + interval '1 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionADL1Y
	  ,SUM(CASE WHEN                        (CNV.ConvictionDate + interval '1 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionL1Y
	  ,SUM(CASE WHEN CNV.DriverPRN='1'  AND (CNV.ConvictionDate + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionMDL5Y
	  ,SUM(CASE WHEN CNV.DriverPRN!='1' AND (CNV.ConvictionDate + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionADL5Y
	  ,SUM(CASE WHEN                        (CNV.ConvictionDate + interval '5 years') >= POL.EFFECTIVEDATE THEN 1 ELSE 0 END) AS ConvictionL5Y
      ,COUNT(*) AS ConvictionTotal
      ,SUM(CASE WHEN SUBSTRING(CNV.CONVICTIONCODE,1,2) != 'SP' THEN 1 ELSE 0 END) ConvictionNonSpeeding
      ,SUM(CASE WHEN SUBSTRING(CNV.CONVICTIONCODE,1,2) IN('BA','CD','DD','DR','DG','TT','MR09','MR29','MR49') THEN 1 ELSE 0 END) ConvictionDangerous
      ,SUM(CASE WHEN SUBSTRING(CNV.CONVICTIONCODE,1,2) = 'IN' THEN 1 ELSE 0 END) ConvictionInsurance
	  ,MIN(CAST(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CNV.ConvictionDate) as INT)) as ConvictionMonthsSince
	  ,MIN(CASE WHEN CNV.DriverPRN='1'  THEN FLOOR(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CNV.ConvictionDate)) ELSE 999 END) AS ConvictionMDMonthsSince
	  ,MIN(CASE WHEN CNV.DriverPRN!='1' THEN FLOOR(MONTHS_BETWEEN(POL.EFFECTIVEDATE, CNV.ConvictionDate)) ELSE 999 END) AS ConvictionADMonthsSince
  FROM IDENTIFIER($CNV) CNV
  INNER JOIN IDENTIFIER($POL) POL
  ON POL.date_created = CNV.date_created
  AND POL.NK_AGG_ID_QUOTE_REF = CNV.NK_AGG_ID_QUOTE_REF
  GROUP BY CNV.Submissionnumber
          ,CNV.NK_AGG_ID_QUOTE_REF
          ,CNV.date_created
  ORDER BY CNV.date_created
          ,CNV.NK_AGG_ID_QUOTE_REF
;

SET CRDF = $PLACENAME||'_CREDITSCORE_FLATTENED"';

DROP TABLE IF EXISTS IDENTIFIER($CRDF);
CREATE TRANSIENT TABLE IDENTIFIER($CRDF) AS
WITH cscore AS(
SELECT *
FROM IDENTIFIER($DE)
WHERE "TYPE"='Credit' and "KEY"='Score'
ORDER BY DATE_CREATED
        ,NK_AGG_ID_QUOTE_REF
), iscore AS(
SELECT *
FROM IDENTIFIER($DE)
WHERE "TYPE"='Credit' and "KEY"='IDScore'
ORDER BY DATE_CREATED
        ,NK_AGG_ID_QUOTE_REF
)SELECT DISTINCT
         b.*
        ,c.value AS credit_score
        ,i.value AS id_score
        ,CASE WHEN nvl(c.value,0)=0 AND nvl(i.value,99)=99 THEN 'X' ELSE 'L' END AS credit_match
FROM IDENTIFIER($POL)	b
LEFT JOIN cscore c
ON  b.DATE_CREATED=c.DATE_CREATED
AND b.NK_AGG_ID_QUOTE_REF=c.NK_AGG_ID_QUOTE_REF
LEFT JOIN iscore i
ON  b.DATE_CREATED=i.DATE_CREATED
AND b.NK_AGG_ID_QUOTE_REF=i.NK_AGG_ID_QUOTE_REF
ORDER BY b.DATE_CREATED
        ,b.NK_AGG_ID_QUOTE_REF
;


SET SCHR = $PLACENAME||'_SCHEME_R_FLATTENED"';

CREATE OR REPLACE TRANSIENT TABLE IDENTIFIER($SCHR) AS
WITH SR AS (
SELECT DISTINCT
       B.SUBMISSIONNUMBER
      ,P.*
FROM IDENTIFIER($BASE) B
INNER JOIN "PRD_RAW_DB"."QUOTES_PUBLIC"."VW_EARNIX_VAN_RES_SCHEME" P
ON  B.SUBMISSIONNUMBER=P.QUOTE_REFERENCE
AND B.DATE_CREATED=P.DATE_CREATED
AND B.AGGHUB_ID_RES_R=P.AGGHUB_ID
),CT AS(
SELECT date_created
      ,nk_agg_id_quote_ref
      ,count(*) as c
FROM SR WHERE ISSELECTED='Y'
GROUP BY date_created
        ,nk_agg_id_quote_ref
), WIN AS(
SELECT DISTINCT
       SR.SCHEME AS SELECTED_SCHEME
      ,SR.ISINCUMBENT AS SELECTED_INCUMBENT
      ,SR.COMMISSION AS SELECTED_COMMISSION
      ,SR.COMMISSIONPNCD AS SELECTED_COMMISSION_PNCD
      ,SR.DATE_CREATED
      ,SR.nk_agg_id_quote_ref
FROM SR
LEFT JOIN CT ON CT.date_created=SR.date_created and CT.nk_agg_id_quote_ref=SR.nk_agg_id_quote_ref
WHERE CT.c<2
AND SR.ISSELECTED='Y'
)
SELECT DISTINCT
         b.*
        ,INC.COMMISSION             AS Incumbent_COMMISSION
        ,AD1.COMMISSION	            AS AD_HD_COMMISSION
		,AD2.COMMISSION 		    AS AD_HP_COMMISSION
		,AX1.COMMISSION 		    AS AX_HD_COMMISSION
		,AX2.COMMISSION 		    AS AX_HP_COMMISSION
		,CO1.COMMISSION 		    AS CO_HD_COMMISSION
		,CO2.COMMISSION 		    AS CO_HP_COMMISSION
        ,INC.COMMISSIONPNCD         AS Incumbent_COMMISSION_PNCD
        ,AD1.COMMISSIONPNCD	        AS AD_HD_COMMISSION_PNCD
		,AD2.COMMISSIONPNCD 		AS AD_HP_COMMISSION_PNCD
		,AX1.COMMISSIONPNCD 		AS AX_HD_COMMISSION_PNCD
		,AX2.COMMISSIONPNCD 		AS AX_HP_COMMISSION_PNCD
		,CO1.COMMISSIONPNCD 		AS CO_HD_COMMISSION_PNCD
		,CO2.COMMISSIONPNCD 		AS CO_HP_COMMISSION_PNCD
        ,CASE WHEN CT2.c>1 THEN 1 ELSE 0 END AS MORE_SELECTED
        ,WIN.SELECTED_SCHEME
        ,WIN.SELECTED_INCUMBENT
        ,WIN.SELECTED_COMMISSION
        ,WIN.SELECTED_COMMISSION_PNCD
FROM (SELECT DISTINCT date_created ,nk_agg_id_quote_ref FROM SR) b
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE nvl(NEWDETAILS,'X')='Y' AND ISINCUMBENT='Y') INC ON b.date_created=INC.date_created and b.nk_agg_id_quote_ref=INC.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='ADCV1' AND ISINCUMBENT='N') AD1 ON b.date_created=AD1.date_created and b.nk_agg_id_quote_ref=AD1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='ADCV2' AND ISINCUMBENT='N') AD2 ON b.date_created=AD2.date_created and b.nk_agg_id_quote_ref=AD2.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='AXCV1' AND ISINCUMBENT='N') AX1 ON b.date_created=AX1.date_created and b.nk_agg_id_quote_ref=AX1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='AXCV2' AND ISINCUMBENT='N') AX2 ON b.date_created=AX2.date_created and b.nk_agg_id_quote_ref=AX2.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='COCV1' AND ISINCUMBENT='N') CO1 ON b.date_created=CO1.date_created and b.nk_agg_id_quote_ref=CO1.nk_agg_id_quote_ref
LEFT JOIN (SELECT DISTINCT * FROM SR WHERE scheme='COCV2' AND ISINCUMBENT='N') CO2 ON b.date_created=CO2.date_created and b.nk_agg_id_quote_ref=CO2.nk_agg_id_quote_ref
LEFT JOIN (SELECT * FROM CT WHERE c>1) CT2 ON b.date_created=CT2.date_created and b.nk_agg_id_quote_ref=CT2.nk_agg_id_quote_ref
LEFT JOIN WIN ON b.date_created=WIN.date_created and b.nk_agg_id_quote_ref=WIN.nk_agg_id_quote_ref
ORDER BY b.date_created
        ,b.nk_agg_id_quote_ref
;


SET AUTO = $PLACENAME||'_Automation"';

CREATE OR REPLACE TRANSIENT TABLE IDENTIFIER($AUTO) AS
SELECT DISTINCT
		 POL.NK_AGG_ID_QUOTE_REF
		,POL.DATE_CREATED
		,POL.SUBMISSIONNUMBER
		,POL.ACCOUNTNUMBER
		,POL.POLICYNUMBER
		,POL.ACCOUNTTYPE
		,POL.TRANSACTIONTYPE
		,POL.TRANSACTIONREASON
		,POL.ORIGINALCHANNELTYPE
		,POL.ORIGINALCHANNELCODE
		,POL.CAMPAIGNCODE
		,POL.CURRENTDATE
		,POL.INCEPTIONDATE
		,POL.EFFECTIVEDATE
		,POL.ENDDATE
		,POL.FIRSTSEENDATE
		,POL.DAYSTOINCEPTION
		,POL.SEENTOINCEPTION
		,POL.DATEOFBIRTH
		,POL.PRICINGRANDOMID
		,POL.EMAILDOMAIN
		,POL.INSURANCEPAYMENTTYPE
		,POL.HOMEOWNERIND
		,POL.TIMEATADDRESS
		,POL.NOOFCHILDREN
		,POL.NOOFDRIVERSINFAMILY
		,POL.NOOFVEHICLESAVAILABLETOFAMILY
		,POL.BROKERTENURE
		,POL.INSURERTENURE
		,POL.APR
		,POL.INSTALMENTS
		,POL.DEPOSIT
		,POL.EXISTINGCUSTOMER
		,POL.USERROLE
		,POL.MTACOUNT
		,POL.LASTMTADATE
		,SCHF.Previous_Year_Refer
      	,SCHF.Previous_Year_Brand
      	,SCHF.Previous_Year_Scheme
      	,SCHF.Previous_Year_Net
        ,SCHF.Previous_Year_Net_PNCD
      	,SCHF.Previous_Year_Commission
		,SCHF.Last_Annualised_Refer
      	,SCHF.Last_Annualised_Brand
      	,SCHF.Last_Annualised_Scheme
      	,SCHF.Last_Annualised_Net
        ,SCHF.Last_Annualised_Net_PNCD
        ,SCHF.Last_Annualised_Commission
        ,SCHF.Incumbent_Refer
        ,SCHF.Incumbent_Brand
        ,SCHF.Incumbent_Scheme
        ,SCHF.Incumbent_Net
        ,SCHR.Incumbent_Commission
        ,SCHF.Incumbent_Net_PNCD
        ,SCHR.Incumbent_Commission_PNCD
		,SCHF.AD_HD_REFER
		,SCHF.AD_HD_NET
        ,SCHR.AD_HD_Commission
        ,SCHF.AD_HD_NET_PNCD
        ,SCHR.AD_HD_Commission_PNCD
		,SCHF.AD_HD_VARIANT
		,SCHF.AD_HD_VOLEXCESSGRANTED
		,SCHF.AD_HD_NCDGRANTED
		,SCHF.AD_HD_RATEDAREA
		,SCHF.AD_HD_RATEDTERMS
		,SCHF.AD_HD_RATEDCATEGORY
		,SCHF.AD_HP_REFER
		,SCHF.AD_HP_NET
        ,SCHR.AD_HP_Commission
        ,SCHF.AD_HP_NET_PNCD
        ,SCHR.AD_HP_Commission_PNCD
		,SCHF.AD_HP_VARIANT
		,SCHF.AD_HP_VOLEXCESSGRANTED
		,SCHF.AD_HP_NCDGRANTED
		,SCHF.AD_HP_RATEDAREA
		,SCHF.AD_HP_RATEDTERMS
		,SCHF.AD_HP_RATEDCATEGORY
		,SCHF.AX_HD_REFER
		,SCHF.AX_HD_NET
        ,SCHR.AX_HD_Commission
        ,SCHF.AX_HD_NET_PNCD
        ,SCHR.AX_HD_Commission_PNCD
		,SCHF.AX_HD_VARIANT
		,SCHF.AX_HD_VOLEXCESSGRANTED
		,SCHF.AX_HD_NCDGRANTED
		,SCHF.AX_HD_RATEDAREA
		,SCHF.AX_HD_RATEDTERMS
		,SCHF.AX_HD_RATEDCATEGORY
		,SCHF.AX_HP_REFER
		,SCHF.AX_HP_NET
        ,SCHR.AX_HP_Commission
        ,SCHF.AX_HP_NET_PNCD
        ,SCHR.AX_HP_Commission_PNCD
		,SCHF.AX_HP_VARIANT
		,SCHF.AX_HP_VOLEXCESSGRANTED
		,SCHF.AX_HP_NCDGRANTED
		,SCHF.AX_HP_RATEDAREA
		,SCHF.AX_HP_RATEDTERMS
		,SCHF.AX_HP_RATEDCATEGORY
		,SCHF.CO_HD_REFER
		,SCHF.CO_HD_NET
        ,SCHR.CO_HD_Commission
        ,SCHF.CO_HD_NET_PNCD
        ,SCHR.CO_HD_Commission_PNCD
		,SCHF.CO_HD_VARIANT
		,SCHF.CO_HD_VOLEXCESSGRANTED
		,SCHF.CO_HD_NCDGRANTED
		,SCHF.CO_HD_RATEDAREA
		,SCHF.CO_HD_RATEDTERMS
		,SCHF.CO_HD_RATEDCATEGORY
		,SCHF.CO_HP_REFER
		,SCHF.CO_HP_NET
        ,SCHR.CO_HP_Commission
        ,SCHF.CO_HP_NET_PNCD
        ,SCHR.CO_HP_Commission_PNCD
		,SCHF.CO_HP_VARIANT
		,SCHF.CO_HP_VOLEXCESSGRANTED
		,SCHF.CO_HP_NCDGRANTED
		,SCHF.CO_HP_RATEDAREA
		,SCHF.CO_HP_RATEDTERMS
		,SCHF.CO_HP_RATEDCATEGORY
        ,SCHR.SELECTED_SCHEME
        ,SCHR.SELECTED_INCUMBENT
        ,SCHR.SELECTED_COMMISSION
        ,SCHR.SELECTED_COMMISSION_PNCD
		,VEH.ALARMIMMOBILISER
		,VEH.ANNUALMILEAGE
		,VEH.BODYTYPE
		,VEH.CLAIMEDENTITLEMENTREASON
		,VEH.CLAIMEDPROTECTIONREQDIND
		,VEH.CLAIMEDYEARS
		,VEH.CLAIMEDYEARSEARNED
		,VEH.CLASSOFUSE
		,CASE WHEN VEH.CLASSOFUSE='01' THEN 'Social, Domestic, Pleasure and Commuting'
	          WHEN VEH.CLASSOFUSE='04' THEN 'Social, Domestic and Pleasure Only'
	          WHEN VEH.CLASSOFUSE='09' THEN 'Business Use - Haulage'
	          WHEN VEH.CLASSOFUSE='10' THEN 'Business Use - Own Goods'
	     ELSE 'Not Yet Defined' END AS CLASSOFUSE_MOD
		,VEH.COVERCODE
		,CASE WHEN VEH.COVERCODE='01' THEN 'comprehensive'
	          WHEN VEH.COVERCODE='02' THEN 'tpft'
	          WHEN VEH.COVERCODE='03' THEN 'thirdparty'
	     ELSE 'Not Yet Defined' END AS COVER_CODE_MOD
		,VEH.COVERPERIOD
		,VEH.CUBICCAPACITY
		,VEH.DRIVERSALLOWED
		,VEH.FIRSTREGDYEAR
		,VEH.KEEPER
		,VEH.RIGHTHANDDRIVE
		,VEH.LOCATIONKEPTOVERNIGHT
		,VEH.MANUFACTURER
		,VEH.MODEL
		,VEH.MODIFIEDIND
		,VEH.NOOFSEATS
		,VEH.OWNEDMONTHS
		,VEH.OWNEDYEARS
		,VEH."OWNERSHIP"
		,VEH.PERSONALIMPORTIND
		,VEH.POSTCODEFULL
		,CASE WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('CB','CO','IP','NR','PE') THEN 'East Anglia'
          	  WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('DE','LE','LN','NG','NN','SK') THEN 'East Midlands'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('E','EC','N','NW','SE','SW','W','WC') THEN 'London'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('CA','DH','LA','NE','SR','TS') THEN 'North'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('BB','BL','CW','FY','L','M','OL','PR','WA','WN') THEN 'North West'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) = 'BT' THEN 'Northern Ireland'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('GY','IM','JE') THEN 'Other Islands'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('BR','CR','DA','EN','HA','IG','KT','RM','SL','SM','TW','UB') THEN 'Outer London'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('AB','DD','DG','EH','FK','G','HS','IV','KA','KW','KY','ML','PA','PH','TD','ZE') THEN 'Scotland'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('AL','BN','CM','CT','GU','HP','LU','ME','MK','OX','PO','RG','RH','SG','SO','SS','TN','WD') THEN 'South East'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('BA','BH','BS','DT','EX','GL','PL','SN','SP','TA','TQ','TR') THEN 'South West'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('CF','CH','LD','LL','NP','SA','SY') THEN 'Wales'
              WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('B','CV','DY','HR','ST','TF','WR','WS','WV') THEN 'West Midlands'
          	  WHEN UPPER(CASE WHEN REGEXP_INSTR(SUBSTR(VEH.POSTCODEFULL,2,1),'[0123456789]')>0 THEN SUBSTR(VEH.POSTCODEFULL,1,1) ELSE SUBSTR(VEH.POSTCODEFULL,1,2) END) in('BD','DL','DN','HD','HG','HU','HX','LS','S','WF','YO') THEN 'Yorkshire'
     	 END AS RISK_AREA
		,VEH.PURCHASEDATE
		,VEH.TRACKERDEVICEFITTEDIND
		,VEH.TRANSMISSIONTYPE
		,VEH.VALUE
		,VEH.VEHICLEAGE
		,VEH.VOLXSAMT
		,VEH.CARRYHAZARDOUSGOODS
		,VEH.INTERNALRACKINGSHELVING
		,VEH.SIGNWRITTEN
		,VEH.REFRIGERATED
		,VEH.GROSSWEIGHT
		,VEH.TOWTRAILER
		,DRVF.AGE
		,DRVF.AGEMIN
		,DRVF.AGEMEAN
		,DRVF.AGEMAX
		,DRVF.UKRESIDENTYEARS
		,DRVF.UKRESIDENTYEARSMIN
		,DRVF.UKRESIDENTYEARSMEAN
		,DRVF.UKRESIDENTFROMBIRTH
		,DRVF.UKRESIDENTFROMBIRTHMIN
		,DRVF.UKRESIDENTFROMBIRTHMEAN
		,DRVF.LicenceType
		,DRVF.LicenceTypeProvisional
		,DRVF.LicenceTypeFullUK
		,DRVF.LicenceTypeFullNonUK
		,DRVF.LICENCEYEARS
		,DRVF.LICENCEYEARSMIN
		,DRVF.LICENCEYEARSMAX
		,DRVF.LICENCEYEARSMEAN
		,DRVF.LICENCEMONTHS
		,DRVF.LICENCEMONTHSMIN
		,DRVF.LICENCEMONTHSMEAN
		,DRVF.ACCESSOTHERVEHICLES
		,DRVF.ACCESSOTHERVEHICLESTOTAL
		,DRVF.MEDICALCONDITION
		,DRVF.MEDICALCONDITIONTOTAL
		,DRVF.NONMOTORCONVICTIONS
		,DRVF.EMPLOYMENTTYPE
		,DRVF.EMPLOYERSBUSINESS
		,DRVF.OCCUPATIONCODE
		,DRVF.EMPLOYMENTTYPEPARTTIME
		,DRVF.EMPLOYMENTTYPETOTALE
		,DRVF.EMPLOYMENTTYPETOTALS
		,DRVF.EMPLOYMENTTYPETOTALR
		,DRVF.EMPLOYMENTTYPETOTALH
		,DRVF.EMPLOYMENTTYPETOTALF
		,DRVF.EMPLOYMENTTYPETOTALU
		,DRVF.DRIVERTOTAL
		,DRVF.DRIVERPARENTS
		,DRVF.DRIVERCHILDREN
		,DRVF.DRIVEROTHERRELATIVE
		,DRVF.DRIVERNONRELATIVE
		,NVL(CLMF.CLAIMMDL1Y,0) AS CLAIMMDL1Y
		,NVL(CLMF.CLAIMADL1Y,0) AS CLAIMADL1Y
		,NVL(CLMF.CLAIML1Y,0) AS CLAIML1Y
		,NVL(CLMF.CLAIMMDL5Y,0) AS CLAIMMDL5Y
		,NVL(CLMF.CLAIMADL5Y,0) AS CLAIMADL5Y
		,NVL(CLMF.CLAIML5Y,0) AS CLAIML5Y
		,NVL(CLMF.CLAIMFAULTMDL1Y,0) AS CLAIMFAULTMDL1Y
		,NVL(CLMF.CLAIMFALUTADL1Y,0) AS CLAIMFALUTADL1Y
		,NVL(CLMF.CLAIMFAULTL1Y,0) AS CLAIMFAULTL1Y
		,NVL(CLMF.CLAIMFAULTMDL5Y,0) AS CLAIMFAULTMDL5Y
		,NVL(CLMF.CLAIMFAULTADL5Y,0) AS CLAIMFAULTADL5Y
		,NVL(CLMF.CLAIMFAULTL5Y,0) AS CLAIMFAULTL5Y
		,NVL(CLMF.CLAIMNONFAULTMDL1Y,0) AS CLAIMNONFAULTMDL1Y
		,NVL(CLMF.CLAIMNONFAULTADL1Y,0) AS CLAIMNONFAULTADL1Y
		,NVL(CLMF.CLAIMNONFAULTL1Y,0) AS CLAIMNONFAULTL1Y
		,NVL(CLMF.CLAIMNONFAULTMDL5Y,0) AS CLAIMNONFAULTMDL5Y
		,NVL(CLMF.CLAIMNONFAULTADL5Y,0) AS CLAIMNONFAULTADL5Y
		,NVL(CLMF.CLAIMNONFAULTL5Y,0) AS CLAIMNONFAULTL5Y
		,NVL(CLMF.CLAIMCOSTL1Y,0) AS CLAIMCOSTL1Y
		,NVL(CLMF.CLAIMWINDSCREENL1Y,0) AS CLAIMWINDSCREENL1Y
		,NVL(CLMF.CLAIMACCIDENTL1Y,0) AS CLAIMACCIDENTL1Y
		,NVL(CLMF.CLAIMFAULTWINDSCREENL1Y,0) AS CLAIMFAULTWINDSCREENL1Y
		,NVL(CLMF.CLAIMFAULTACCIDENTL1Y,0) AS CLAIMFAULTACCIDENTL1Y
		,NVL(CLMF.CLAIMOTHERL1Y,0) AS CLAIMOTHERL1Y
		,NVL(CLMF.CLAIMFAULTOTHERL1Y,0) AS CLAIMFAULTOTHERL1Y
		,NVL(CLMF.CLAIMCOSTL5Y,0) AS CLAIMCOSTL5Y
		,NVL(CLMF.CLAIMWINDSCREENL5Y,0) AS CLAIMWINDSCREENL5Y
		,NVL(CLMF.CLAIMACCIDENTL5Y,0) AS CLAIMACCIDENTL5Y
		,NVL(CLMF.CLAIMFAULTWINDSCREENL5Y,0) AS CLAIMFAULTWINDSCREENL5Y
		,NVL(CLMF.CLAIMFAULTACCIDENTL5Y,0) AS CLAIMFAULTACCIDENTL5Y
		,NVL(CLMF.CLAIMOTHERL5Y,0) AS CLAIMOTHERL5Y
		,NVL(CLMF.CLAIMFAULTOTHERL5Y,0) AS CLAIMFAULTOTHERL5Y
		,NVL(CLMF.CLAIMMONTHSSINCE,999) AS CLAIMMONTHSSINCE
		,NVL(CLMF.CLAIMMDMONTHSSINCE,999) AS CLAIMMDMONTHSSINCE
		,NVL(CLMF.CLAIMADMONTHSSINCE,999) AS CLAIMADMONTHSSINCE
		,NVL(CNVF.CONVICTIONMDL1Y,0) AS CONVICTIONMDL1Y
		,NVL(CNVF.CONVICTIONADL1Y,0) AS CONVICTIONADL1Y
		,NVL(CNVF.CONVICTIONL1Y,0) AS CONVICTIONL1Y
		,NVL(CNVF.CONVICTIONMDL5Y,0) AS CONVICTIONMDL5Y
		,NVL(CNVF.CONVICTIONADL5Y,0) AS CONVICTIONADL5Y
		,NVL(CNVF.CONVICTIONL5Y,0) AS CONVICTIONL5Y
		,NVL(CNVF.CONVICTIONTOTAL,0) AS CONVICTIONTOTAL
		,NVL(CNVF.CONVICTIONNONSPEEDING,0) AS CONVICTIONNONSPEEDING
		,NVL(CNVF.CONVICTIONDANGEROUS,0) AS CONVICTIONDANGEROUS
		,NVL(CNVF.CONVICTIONINSURANCE,0) AS CONVICTIONINSURANCE
		,NVL(CNVF.CONVICTIONMONTHSSINCE,999) AS CONVICTIONMONTHSSINCE
		,NVL(CNVF.CONVICTIONMDMONTHSSINCE,999) AS CONVICTIONMDMONTHSSINCE
		,NVL(CNVF.CONVICTIONADMONTHSSINCE,999) AS CONVICTIONADMONTHSSINCE
		,CRDF.CREDIT_SCORE
		,CRDF.ID_SCORE
		,CASE WHEN DRVF.AGE>=70 THEN 1 -- ONLY AGG BUSINESS IN THIS EXTRACT
	 	  	  WHEN DRVF.occupationcode IN ('42D','43D') THEN 1
	 	      WHEN CRDF.CREDIT_MATCH ='L'AND CRDF.CREDIT_SCORE<100 AND POL.INSURANCEPAYMENTTYPE=3 THEN 1
	 	      WHEN CRDF.CREDIT_MATCH <>'L' AND DRVF.AGE>=25 THEN 1
	 	      WHEN DRVF.UKRESIDENTYEARS<6 AND CRDF.CREDIT_SCORE<150 THEN 1
	     ELSE 0 END AS VULNERABLE
FROM IDENTIFIER($POL) POL
INNER JOIN IDENTIFIER($SCHF) SCHF
ON  POL.DATE_CREATED=SCHF.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=SCHF.NK_AGG_ID_QUOTE_REF
INNER JOIN IDENTIFIER($SCHR) SCHR
ON  POL.DATE_CREATED=SCHR.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=SCHR.NK_AGG_ID_QUOTE_REF
INNER JOIN IDENTIFIER($VEHCOV) VEH
ON  POL.DATE_CREATED=VEH.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=VEH.NK_AGG_ID_QUOTE_REF
INNER JOIN IDENTIFIER($DRVF) DRVF
ON  POL.DATE_CREATED=DRVF.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=DRVF.NK_AGG_ID_QUOTE_REF
LEFT JOIN IDENTIFIER($CLMF) CLMF
ON  POL.DATE_CREATED=CLMF.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=CLMF.NK_AGG_ID_QUOTE_REF
LEFT JOIN IDENTIFIER($CNVF) CNVF
ON  POL.DATE_CREATED=CNVF.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=CNVF.NK_AGG_ID_QUOTE_REF
LEFT JOIN IDENTIFIER($CRDF) CRDF
ON  POL.DATE_CREATED=CRDF.DATE_CREATED
AND POL.NK_AGG_ID_QUOTE_REF=CRDF.NK_AGG_ID_QUOTE_REF
;

select *
from IDENTIFIER($SCHR)
WHERE SELECTED_SCHEME IS NOT NULL;
SELECT * FROM IDENTIFIER($AUTO);


---------Cleanup Tables

SET SCTE0 = $PLACENAME||'_SALE_CTE_0"';
SET SCTE = $PLACENAME||'_SALE_CTE"';
SET PST = $PLACENAME||'_PST"';
SET CXNB = $PLACENAME||'_CANCELLATIONS_CANCELLED_NB"';
SET CXRB = $PLACENAME||'_CANCELLATIONS_REBROKE_POLS"';
SET CXLT = $PLACENAME||'_CANCELLATIONS_LAST_TRANSACTION"';
SET CX = $PLACENAME||'_CANCELLATIONS"';
SET DEC1 = $PLACENAME||'_decline_1"';
SET DECLS = $PLACENAME||'_declines"';
SET REFER = $PLACENAME||'_referrals"';
SET POLERR = $PLACENAME||'_polaris_errors"';
SET SCHERR = $PLACENAME||'_scheme_errors"';
SET QUTERR = $PLACENAME||'_quote_errors"';
SET BNDERR = $PLACENAME||'_brand_errors"';
SET POLREF = $PLACENAME||'_polaris_refs"';
SET DECL = $PLACENAME||'_decline"';
SET DECLD = $PLACENAME||'_declined"';
SET QUOTES = $PLACENAME||'_QUOTES"';
SET SESS = $PLACENAME||'_SESSIONS"';
SET BASE = $PLACENAME||'_BASE"';
SET MTA1 = $PLACENAME||'_MTA1"';
SET MTA2 = $PLACENAME||'_MTA2"';
SET MTA = $PLACENAME||'_MTA"';
SET POL1 = $PLACENAME||'_POLICY1"';
SET POL2 = $PLACENAME||'_POLICY2"';
SET SCHNB = $PLACENAME||'_SCHEME_NB"';
SET SCHRN = $PLACENAME||'_SCHEME_RN"';
SET SCHNBR = $PLACENAME||'_SCHEME_NB_RATED"';
SET SCHRNR = $PLACENAME||'_SCHEME_RN_RATED"';
SET SCHLYP = $PLACENAME||'_SCHEME_LYP"';
SET SCHLAN = $PLACENAME||'_SCHEME_LAN"';
SET SCHINV = $PLACENAME||'_SCHEME_INV"';
SET SCHREB = $PLACENAME||'_SCHEME_REB"';
SET DECRD = $PLACENAME||'_DECredit"';

---------Cleanup Tables main tables

SET BASW = $PLACENAME||'_BASE_WIN"';
SET SCHF = $PLACENAME||'_SCHEME_FLATTENED"';
SET ADOF = $PLACENAME||'_ADDON_FLATTENED"';
SET DRVF = $PLACENAME||'_DRIVER_FLATTENED"';
SET CLMF = $PLACENAME||'_CLAIM_FLATTENED"';
SET CNVF = $PLACENAME||'_CONVICTIONS_FLATTENED"';
SET CRDF = $PLACENAME||'_CREDITSCORE_FLATTENED"';

SET POL = $PLACENAME||'_Policy"';
SET SCH = $PLACENAME||'_Scheme"';
SET ADDON = $PLACENAME||'_AddOn"';
SET VEHCOV = $PLACENAME||'_VehicleCover"';
SET DRIVE = $PLACENAME||'_Driver"';
SET CLAIM = $PLACENAME||'_Claim"';
SET CNV = $PLACENAME||'_Conviction"';
SET DE = $PLACENAME||'_DataEnrichment"';


// NB winning schemes
SET NBWE = $PLACENAME||'_NB_Win_Earnix"';

CREATE OR REPLACE TEMPORARY TABLE IDENTIFIER($NBWE) AS
-- COLUMNS
SELECT C.RN_SUBMISSION, C.NB_SUBMISSION
,A.BRAND, A.SCHEME, A.NETPREMIUM, A.NETPREMIUMPNCD, A.REFERRAL, A.NEWDETAILS
,B.COMMISSION, B.COMMISSIONPNCD
,ROW_NUMBER() OVER (PARTITION BY C.NB_Submission, A.Brand ORDER BY A.NetPremium ASC) AS EARNIX_NO
-- TABLES & JOINS
FROM PRD_RAW_DB.QUOTES_PUBLIC.VW_EARNIX_VAN_REQ_SCHEME A
INNER JOIN PRD_RAW_DB.QUOTES_PUBLIC.VW_EARNIX_VAN_RES_SCHEME B
ON A.QUOTE_REFERENCE = B.QUOTE_REFERENCE
AND A.SCHEME = B.SCHEME
AND A.BRAND = B.BRAND
AND A.NEWDETAILS = B.NEWDETAILS
INNER JOIN WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW C
ON A.QUOTE_REFERENCE = C.NB_SUBMISSION
-- CONDITIONS
WHERE B.COMMISSION != '99999'
AND B.COMMISSION != '99999'
AND A.NEWDETAILS = 'Y'
;

SET VCBD = $PLACENAME||'_Van_Case_Breakdown"';

CREATE OR REPLACE TEMPORARY TABLE IDENTIFIER ($VCBD) AS
WITH rn AS (
SELECT
a.rn_submission
,b.ClaimedProtectionReqdInd AS "PNCD"
,CASE
  WHEN b.Instalments = '12' THEN 'Y'
  ELSE 'N'
  END AS "DD_DUQ"
,b.Incumbent_Brand
,b.Incumbent_Scheme
,b.Incumbent_Net
,b.Incumbent_Net_PNCD AS "INCUMBENT_NETPNCD"
,b.Incumbent_Commission
,b.Incumbent_Commission_PNCD AS "INCUMBENT_COMMISSIONPNCD"
,b.Incumbent_Net + b.Incumbent_Commission AS "INCUMBENT_GROSS"
,b.Incumbent_Net_PNCD + b.Incumbent_Commission_PNCD AS "INCUMBENT_GROSSPNCD"
,b.Selected_Incumbent AS "INCUMBENT_SELECTED"
,b.Selected_Scheme AS "INVITED_SCHEME"
,CASE
  WHEN b.Selected_Incumbent = 'Y' THEN b.Incumbent_Net
  WHEN b.Selected_Scheme = 'ADCV1' THEN b.AD_HD_NET
  WHEN b.Selected_Scheme = 'AXCV1' THEN b.AX_HD_NET
  WHEN b.Selected_Scheme = 'COCV1' THEN b.CO_HD_NET
  END AS "INVITED_NET"
,CASE
  WHEN b.Selected_Incumbent = 'Y' THEN b.Incumbent_Net_PNCD
  WHEN b.Incumbent_Scheme = 'ADCV2' THEN b.AD_HD_NET_PNCD
  WHEN b.Incumbent_Scheme = 'AXCV2' THEN b.AX_HD_NET_PNCD
  WHEN b.Incumbent_Scheme = 'COCV2' THEN b.CO_HD_NET_PNCD
  END AS "INVITED_NETPNCD"
,b.Selected_Commission AS "INVITED_COMMISSION"
,b.Selected_Commission_PNCD AS "INVITED_COMMISSIONPNCD"
FROM WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW a
LEFT JOIN IDENTIFIER($AUTO) b
  ON a.RN_Submission = b.SubmissionNumber
)
,cheapest as (
SELECT
a.RN_Submission
,CASE
  WHEN b.Incumbent_Brand = 'HP'
  THEN LEAST(
    CASE
      WHEN INCUMBENT_COMMISSION IS NULL THEN 9999
      WHEN INCUMBENT_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(INCUMBENT_NET,9999)
      END
    ,CASE
      WHEN AD_HP_COMMISSION IS NULL THEN 9999
      WHEN AD_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AD_HP_NET,9999)
      END
    ,CASE
      WHEN AX_HP_COMMISSION IS NULL THEN 9999
      WHEN AX_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AX_HP_NET,9999)
      END
    ,CASE
      WHEN CO_HP_COMMISSION IS NULL THEN 9999
      WHEN CO_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(CO_HP_NET,9999)
      END
    )
  ELSE LEAST(
    CASE
      WHEN INCUMBENT_COMMISSION IS NULL THEN 9999
      WHEN INCUMBENT_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(INCUMBENT_NET,9999)
      END
    ,CASE
      WHEN AD_HD_COMMISSION IS NULL THEN 9999
      WHEN AD_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AD_HD_NET,9999)
      END
    ,CASE
      WHEN AX_HD_COMMISSION IS NULL THEN 9999
      WHEN AX_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AX_HD_NET,9999)
      END
    ,CASE
      WHEN CO_HD_COMMISSION IS NULL THEN 9999
      WHEN CO_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(CO_HD_NET,9999)
      END
  )
  END AS "CHEAPEST_NET"
,CASE
  WHEN b.Incumbent_Brand = 'HP'
  THEN LEAST(
    CASE
      WHEN INCUMBENT_COMMISSION IS NULL THEN 9999
      WHEN INCUMBENT_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(INCUMBENT_NET_PNCD,9999)
      END
    ,CASE
      WHEN AD_HP_COMMISSION IS NULL THEN 9999
      WHEN AD_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AD_HP_NET_PNCD,9999)
      END
    ,CASE
      WHEN AX_HP_COMMISSION IS NULL THEN 9999
      WHEN AX_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AX_HP_NET_PNCD,9999)
      END
    ,CASE
      WHEN CO_HP_COMMISSION IS NULL THEN 9999
      WHEN CO_HP_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(CO_HP_NET_PNCD,9999)
      END
    )
  ELSE LEAST(
    CASE
      WHEN INCUMBENT_COMMISSION IS NULL THEN 9999
      WHEN INCUMBENT_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(INCUMBENT_NET_PNCD,9999)
      END
    ,CASE
      WHEN AD_HD_COMMISSION IS NULL THEN 9999
      WHEN AD_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AD_HD_NET_PNCD,9999)
      END
    ,CASE
      WHEN AX_HD_COMMISSION IS NULL THEN 9999
      WHEN AX_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(AX_HD_NET_PNCD,9999)
      END
    ,CASE
      WHEN CO_HD_COMMISSION IS NULL THEN 9999
      WHEN CO_HD_COMMISSION > 9000 THEN 9999
      ELSE COALESCE(CO_HD_NET_PNCD,9999)
      END
  )
  END AS "CHEAPEST_NETPNCD"
,CASE
  WHEN b.INCUMBENT_NET = CHEAPEST_NET THEN b.INCUMBENT_COMMISSION
  WHEN b.AD_HP_NET = CHEAPEST_NET THEN b. AD_HP_COMMISSION
  WHEN b.AX_HP_NET = CHEAPEST_NET THEN b.AX_HP_COMMISSION
  WHEN b.CO_HP_NET = CHEAPEST_NET THEN b.CO_HP_COMMISSION
  WHEN b.AD_HD_NET = CHEAPEST_NET THEN b.AD_HD_COMMISSION
  WHEN b.AX_HD_NET = CHEAPEST_NET THEN b.AX_HD_COMMISSION
  WHEN b.CO_HD_NET = CHEAPEST_NET THEN b.CO_HD_COMMISSION
  END AS "CHEAPEST_COMMISSION"
,CASE
  WHEN b.INCUMBENT_NET_PNCD = CHEAPEST_NETPNCD THEN b.INCUMBENT_COMMISSION_PNCD
  WHEN b.AD_HP_NET_PNCD = CHEAPEST_NETPNCD THEN b. AD_HP_COMMISSION_PNCD
  WHEN b.AX_HP_NET_PNCD = CHEAPEST_NETPNCD THEN b.AX_HP_COMMISSION_PNCD
  WHEN b.CO_HP_NET_PNCD = CHEAPEST_NETPNCD THEN b.CO_HP_COMMISSION_PNCD
  WHEN b.AD_HD_NET_PNCD = CHEAPEST_NETPNCD THEN b.AD_HD_COMMISSION_PNCD
  WHEN b.AX_HD_NET_PNCD = CHEAPEST_NETPNCD THEN b.AX_HD_COMMISSION_PNCD
  WHEN b.CO_HD_NET_PNCD = CHEAPEST_NETPNCD THEN b.CO_HD_COMMISSION_PNCD
  END AS "CHEAPEST_COMMISSIONPNCD"
,(CHEAPEST_NET + CHEAPEST_COMMISSION) AS "CHEAPEST_GROSS"
,(CHEAPEST_NETPNCD + CHEAPEST_COMMISSIONPNCD) AS "CHEAPEST_GROSSPNCD"
,CASE
  WHEN (CHEAPEST_NET = b.AD_HD_NET AND b.Incumbent_Brand = 'HD') THEN 'ADCV1'
  WHEN (CHEAPEST_NET = b.AD_HP_NET AND b.Incumbent_Brand = 'HP') THEN 'ADCV2'
  WHEN (CHEAPEST_NET = b.AX_HD_NET AND b.Incumbent_Brand = 'HD') THEN 'AXCV1'
  WHEN (CHEAPEST_NET = b.AX_HP_NET AND b.Incumbent_Brand = 'HP') THEN 'AXCV2'
  WHEN (CHEAPEST_NET = b.CO_HD_NET AND b.Incumbent_Brand = 'HD') THEN 'COCV1'
  WHEN (CHEAPEST_NET = b.CO_HP_NET AND b.Incumbent_Brand = 'HP') THEN 'COCV2'
  WHEN (CHEAPEST_NETPNCD = b.AD_HD_NET_PNCD AND b.Incumbent_Brand = 'HD') THEN 'ADCV1'
  WHEN (CHEAPEST_NETPNCD = b.AD_HP_NET_PNCD AND b.Incumbent_Brand = 'HP') THEN 'ADCV2'
  WHEN (CHEAPEST_NETPNCD = b.AX_HD_NET_PNCD AND b.Incumbent_Brand = 'HD') THEN 'AXCV1'
  WHEN (CHEAPEST_NETPNCD = b.AX_HP_NET_PNCD AND b.Incumbent_Brand = 'HP') THEN 'AXCV2'
  WHEN (CHEAPEST_NETPNCD = b.CO_HD_NET_PNCD AND b.Incumbent_Brand = 'HD') THEN 'COCV1'
  WHEN (CHEAPEST_NETPNCD = b.CO_HP_NET_PNCD AND b.Incumbent_Brand = 'HP') THEN 'COCV2'
  ELSE b.Incumbent_Scheme
  END AS "CHEAPEST_SCHEME"
FROM WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW a
LEFT JOIN IDENTIFIER($AUTO) b
  ON a.RN_Submission = b.SubmissionNumber
)
,nb AS (
  SELECT
  A.RN_SUBMISSION, A.NB_SUBMISSION, A.BRAND, A.SCHEME, A.REFERRAL, A.NEWDETAILS
  ,TO_NUMBER(A.NETPREMIUM,10,2) AS "NB_NET", TO_NUMBER(A.NETPREMIUMPNCD,10,2) AS "NB_NETPNCD"
  ,TO_NUMBER(A.COMMISSION,10,2) AS "NB_COMMISSION", TO_NUMBER(A.COMMISSIONPNCD,10,2) AS "NB_COMMISSIONPNCD"
  ,A.EARNIX_NO
  FROM IDENTIFIER($NBWE) A
  INNER JOIN IDENTIFIER($AUTO) B
  ON A.RN_SUBMISSION = B.SUBMISSIONNUMBER
  WHERE A.BRAND = B.INCUMBENT_BRAND
  AND A.EARNIX_NO = 1
)
SELECT DISTINCT
a.RN_Submission
,i.PNCD
,i.DD_DUQ
,i.Incumbent_Brand as "INCUMBENT_BRAND"
,i.Incumbent_Scheme as "INCUMBENT_SCHEME"
,i.INCUMBENT_NET
,i.INCUMBENT_NETPNCD
,i.INCUMBENT_COMMISSION
,i.INCUMBENT_COMMISSIONPNCD
,i.INCUMBENT_GROSS
,i.INCUMBENT_GROSSPNCD
,i.INCUMBENT_SELECTED
,i.INVITED_SCHEME
,i.INVITED_NET
,i.INVITED_NETPNCD
,i.INVITED_COMMISSION
,i.INVITED_COMMISSIONPNCD
,(i.INVITED_NET + i.INVITED_COMMISSION) AS INVITED_GROSS
,(i.INVITED_NETPNCD + i.INVITED_COMMISSIONPNCD) AS INVITED_GROSSPNCD
,e.CHEAPEST_SCHEME
,ROUND(e."CHEAPEST_NET",2) AS "CHEAPEST_NET"
,ROUND(e."CHEAPEST_NETPNCD",2) AS "CHEAPEST_NETPNCD"
,ROUND(e."CHEAPEST_COMMISSION",2) AS "CHEAPEST_COMMISSION"
,ROUND(e."CHEAPEST_COMMISSIONPNCD",2) AS "CHEAPEST_COMMISSIONPNCD"
,ROUND(e."CHEAPEST_GROSS",2) AS "CHEAPEST_GROSS"
,ROUND(e."CHEAPEST_GROSSPNCD",2) AS "CHEAPEST_GROSSPNCD"
,CASE
    WHEN i.PNCD = 'Y' AND i.INVITED_NETPNCD = CHEAPEST_NETPNCD THEN 'Y'
    WHEN i.PNCD = 'N' AND i.INVITED_NET = CHEAPEST_NET THEN 'Y'
    ELSE 'N'
    END AS "CHEAPEST_SELECTED"
,a.NB_Submission
,n.Brand AS "NB_BRAND"
,n.Scheme AS "NB_SCHEME"
,n.NB_NET
,n.NB_NETPNCD
,n.NB_COMMISSION
,n.NB_COMMISSIONPNCD
,(n.NB_NET + n.NB_COMMISSION) AS "NB_GROSS"
,(n.NB_NETPNCD + n.NB_COMMISSIONPNCD) AS "NB_GROSSPNCD"
,CASE
    WHEN (PNCD = 'N' AND INVITED_NET < NB_NET) THEN 'Y'
    WHEN (PNCD = 'Y' AND INVITED_NETPNCD < NB_NETPNCD) THEN 'Y'
    WHEN (PNCD = 'N' AND INVITED_NET >= NB_NET) THEN 'N'
    WHEN (PNCD = 'Y' AND INVITED_NETPNCD >= NB_NETPNCD) THEN 'N'
    ELSE 'N'
    END AS "INV_NET_LT_NB_NET"
,CASE
    WHEN (PNCD = 'N' AND INVITED_NET <= NB_NET) THEN 'Y'
    WHEN (PNCD = 'Y' AND INVITED_NETPNCD <= NB_NETPNCD) THEN 'Y'
    WHEN (PNCD = 'N' AND INVITED_NET > NB_NET) THEN 'N'
    WHEN (PNCD = 'Y' AND INVITED_NETPNCD > NB_NETPNCD) THEN 'N'
    ELSE 'N'
    END AS "INV_NET_LE_NB_NET"
,CASE
    WHEN PNCD = 'N' AND ABS(INVITED_COMMISSION / (INVITED_NET + INVITED_COMMISSION)) = ABS(NB_COMMISSION / NB_GROSS) THEN 'Y'
    WHEN PNCD = 'Y' AND ABS(INVITED_COMMISSIONPNCD / (INVITED_NETPNCD + INVITED_COMMISSIONPNCD)) = ABS(NB_COMMISSIONPNCD / NB_GROSSPNCD) THEN 'Y'
    ELSE 'N'
    END AS "INV_COMM_EQ_NB_COMM"
,CASE
    WHEN PNCD = 'N' AND ABS(INVITED_COMMISSION / (INVITED_NET + INVITED_COMMISSION)) < ABS(NB_COMMISSION / NB_GROSS) THEN 'Y'
    WHEN PNCD = 'Y' AND ABS(INVITED_COMMISSIONPNCD / (INVITED_NETPNCD + INVITED_COMMISSIONPNCD)) < ABS(NB_COMMISSIONPNCD / NB_GROSSPNCD) THEN 'Y'
    ELSE 'N'
    END AS "INV_COMM_LT_NB_COMM"
,CASE
    WHEN PNCD = 'N' AND ABS(INVITED_COMMISSION / (INVITED_NET + INVITED_COMMISSION)) > ABS(NB_COMMISSION / NB_GROSS) THEN 'Y'
    WHEN PNCD = 'Y' AND ABS(INVITED_COMMISSIONPNCD / (INVITED_NETPNCD + INVITED_COMMISSIONPNCD)) > ABS(NB_COMMISSIONPNCD / NB_GROSSPNCD) THEN 'Y'
    ELSE 'N'
    END AS "INV_COMM_GT_NB_COMM"
,CASE
    WHEN PNCD = 'N' AND INVITED_GROSS <= NB_GROSS THEN 'Y'
    WHEN PNCD = 'Y' AND INVITED_GROSSPNCD <= NB_GROSSPNCD THEN 'Y'
    ELSE 'N'
    END AS "INV_GROSS_LE_NB_GROSS"
,CASE
    -- Order Declined > No Errors > Commission & NetPremium > Commission > NetPremium
    WHEN PNCD = 'N' AND (INVITED_NET IS NULL OR INVITED_COMMISSION > 9500 OR INVITED_COMMISSION IS NULL) THEN 'Renewal Declined'
    WHEN PNCD = 'Y' AND (INVITED_NETPNCD IS NULL OR INVITED_COMMISSIONPNCD > 9500 OR INVITED_COMMISSIONPNCD IS NULL) THEN 'Renewal Declined'
    WHEN NB_SCHEME IS NULL THEN 'New Business Declined'
    WHEN INV_COMM_EQ_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'Y' THEN 'No Errors'
    WHEN INV_COMM_EQ_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'N' THEN 'Net Rate Issue'
    WHEN INV_COMM_LT_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'Y' THEN 'Commission Lower (Compliant)'
    WHEN INV_NET_LT_NB_NET = 'Y' THEN 'Net Rate Lower (Compliant)'
    WHEN INV_COMM_GT_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'Y' AND INV_GROSS_LE_NB_GROSS = 'N' THEN 'Commission Issue'
    WHEN INV_COMM_GT_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'Y' AND INV_GROSS_LE_NB_GROSS = 'Y' THEN 'Commission Issue (Compliant)'
    WHEN INV_COMM_GT_NB_COMM = 'Y' AND INV_NET_LE_NB_NET = 'N' THEN 'Commission and Net Rate Issue'
    WHEN INV_GROSS_LE_NB_GROSS = 'Y' AND INV_COMM_LT_NB_COMM = 'Y' AND INV_NET_LT_NB_NET = 'N' THEN 'Net Rate Issue (Compliant)'
    WHEN INV_GROSS_LE_NB_GROSS = 'N' AND INV_COMM_LT_NB_COMM = 'Y' AND INV_NET_LT_NB_NET = 'N' THEN 'Net Rate Issue'
    ELSE 'Unknown'
    END AS "RESULT"
FROM WRK_RETAILPRICING.GROWTH.GIPP_VAN_SUBS_JW a
LEFT JOIN rn i ON a.RN_Submission = i.RN_Submission
LEFT JOIN nb n ON a.NB_Submission = n.NB_Submission
LEFT JOIN cheapest e on a.RN_Submission = e.RN_Submission
ORDER BY a.RN_Submission;

SELECT * FROM IDENTIFIER($VCBD);